{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "connexion active !!!\n"
     ]
    }
   ],
   "source": [
    "# alignement requete + lists id + list meta + trials from meta par id\n",
    "\n",
    "\n",
    "from Bio import Entrez\n",
    "from Bio import Medline\n",
    "\n",
    "\n",
    "def clean_data(x):\n",
    "    chaine = str(x)\n",
    "    chaine = chaine.replace(\"['\",\" \")\n",
    "    chaine = chaine.replace(\"']\",\" \")\n",
    "    chaine = chaine.replace(\"'\",\" \")\n",
    "    return chaine\n",
    "\n",
    "def clean(x):\n",
    "    chaine = str(x)\n",
    "    chaine = chaine.replace(\"[\",\" \")\n",
    "    chaine = chaine.replace(\"]\",\" \")\n",
    "    chaine = chaine.replace(\"'\",\" \")\n",
    "    return chaine\n",
    "\n",
    "def clean_a(x):\n",
    "    chaine = str(x)\n",
    "    chaine = chaine.replace(\"/\",\"\")\n",
    "    chaine = chaine.replace(\"*\",\" \")\n",
    "    return chaine\n",
    "\n",
    "\n",
    "def ConPub():\n",
    "    Entrez.api_key = \"41843b992ded592334c39fe437c425e40608\"\n",
    "    Entrez.email = \"sacha.torres@univ_montp3.fr\"\n",
    "    Entrez.tool = \"Inca\"\n",
    "    print(\"connexion active !!!\")\n",
    "\n",
    "def Query():\n",
    "    p = input(\"query pubmed :\")\n",
    "    pq = p + \" \"+\"and Cochrane Database Syst Rev\"\n",
    "    return pq\n",
    "\n",
    "def CorQuPub(q):\n",
    "    han = Entrez.espell(term=q)\n",
    "    rea = Entrez.read(han)\n",
    "    return rea[\"CorrectedQuery\"]\n",
    "\n",
    "def MetaList(q):\n",
    "    hend = Entrez.esearch(db=\"pubmed\",term=q)\n",
    "    ret = Entrez.read(hend)\n",
    "    return ret[\"IdList\"]\n",
    "\n",
    "def MetaCount(q):\n",
    "    hand = Entrez.esearch(db=\"pubmed\",term=q)\n",
    "    rec = Entrez.read(hand)\n",
    "    return rec[\"Count\"]\n",
    "\n",
    "def FetchIdList(ids):\n",
    "    handle = Entrez.efetch(db=\"pubmed\",id=ids,rettype=\"medline\",retmode=\"text\")\n",
    "    record = Medline.parse(handle)\n",
    "    return record\n",
    "    #code jinja pour la liste des données dans le dictionnaire\n",
    "    #for re in record:\n",
    "    #    titre : re[\"TI\"]\n",
    "    #   r = clean_data(re[\"FAU\"])\n",
    "    #    auteurs : r\n",
    "        \n",
    "def TrFromMeta(mid):\n",
    "    handlle = Entrez.elink(db=\"pubmed\",id=mid)\n",
    "    result = Entrez.read(handlle)\n",
    "    print(result[0][\"LinkSetDb\"])\n",
    "    #return result\n",
    "    \n",
    "def DataDbs():\n",
    "    pass\n",
    "    \n",
    "ConPub()\n",
    "a = Query()\n",
    "CorQuPub(a)\n",
    "b = MetaList(a)\n",
    "c = MetaCount(a)\n",
    "print(\" nb metas : \",c)\n",
    "for res in FetchIdList(b):\n",
    "    print(res[\"TI\"])\n",
    "    r = clean_data(res[\"FAU\"])\n",
    "    print(r)\n",
    "    print(\"\")\n",
    "print(\"####\")    \n",
    "id=31264709       \n",
    "print(TrFromMeta(id))\n",
    "print(\"\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "connexion engaged captain picard !!!\n",
      "\n",
      "pubmed pubmed_pubmed   98\n",
      "pubmed pubmed_pubmed_combined   6\n",
      "pubmed pubmed_pubmed_five   6\n",
      "pubmed pubmed_pubmed_reviews   24\n",
      "pubmed pubmed_pubmed_reviews_five   6\n",
      "\n",
      " nombre de lien pubmed possibles :  26\n",
      " nombres de liens existant avec  31564709  sont au total de :  5\n",
      "\n",
      "pubmed_pubmed :  {'Id': '31264709'}\n",
      "pubmed_pubmed_alsoviewed :  {'Id': '31871526'}\n",
      "pubmed_pubmed :  {'Id': '27136291'}\n",
      "pubmed_pubmed_alsoviewed :  {'Id': '31852122'}\n",
      "pubmed_pubmed :  {'Id': '27731904'}\n",
      "pubmed_pubmed_alsoviewed :  {'Id': '31624524'}\n",
      "pubmed_pubmed :  {'Id': '30570133'}\n",
      "pubmed_pubmed_alsoviewed :  {'Id': '31567447'}\n",
      "pubmed_pubmed :  {'Id': '29797697'}\n",
      "pubmed_pubmed_alsoviewed :  {'Id': '31511054'}\n",
      "\n",
      "31264709  27136291  27731904  30570133  29797697  30648738  24563180  29183107  27976369  26583517  28118681  29096046  21833961  31425630  30105749  28675921  28540977  26558801  28535578  22696324  27852101  31845767  25358904  28752910  31747470  27296541  26350625  30827035  31425620  25803542  25775926  28537052  30312988  27901279  30991443  27577848  30480769  29125183  26148507  28257559  29489026  24482059  26608695  26892070  26384956  29547689  26915339  30521680  31529804  28534597  27195724  11034687  28444736  30921477  23543584  25504418  28349525  30341915  28625021  29697138  25918921  27807847  25310622  10796718  27087494  31486548  25924805  27511809  27106604  29388198  20824862  28742263  23990351  25406011  26820670  29800485  31608992  17636586  14973957  29696918  25528596  30699235  10796690  29761478  29368795  29656433  23897589  31538328  23913583  27976360  27126581  22592687  19821295  31140578  31647106  17636653  29729027  22956412  27351677  22592702  28181214  31978254  29502347  30484286  23728665  24610050  31763689  30480754  30629283  24092525  31981368  31995657  30657163  26423025  30741800  30480757  31456223  31626086  30521671  31207666  31689359  29664991  26264829  31684698  28892119  31126554  31567447  24567053  31915452  30085176  30614289  31139458  31676397  29293982  28112384  31912888  31803930  27484228  15976539  10627770  30843421  31779989  30740799  23440822  29921434  31710185  16185097  30132627  31814859  31855257  10627767  31825525  14992162  31593115  31514246  31890686  31871526  30913192  11300044  31689760  29778387  31097035  27965887  31852122  28065221  30913198  28391738  17361532  11844364  31433197  31383426  31959233  9536216  31804322  31865721  30856025  30565716  23075410  31839144  30979610  31435770  31994179  31867675  31772597  31556315  31689761  31415397  30729291  31679915  31997236  31513475  31917860  31883371  31863097  31445362  31781277  10627768  31793352  30845813  31744506  18315508  31871522  30843423  31843094  30900484  31808921  31970309  31670423  25905194  11293003  18678115  31817993  31113751  15022656  30957664  31653216  16163003  24353659  27695608  31919796  30926178  30779772  31780020  12659786  31977635  31536786  30684765  31826366  30821135  20038262  31731019  31897607  27450187  31695622  31993631  30822358  22967279  9680898  31914234  31584133  30867561  31608558  30981461  14662058  31701623  31865722  31908561  30801794  31539602  31283555  31893538  28521685  30615039  29789346  31878346  31920361  30175648  31449918  15976547  31425838  12699264  31783875  31969278  31796532  31836678  31238263  31801099  31620985  31289056  31166000  30415181  31871519  12548323  31522917  30999278  30368878  31703366  31912644  29171314  12054384  12801494  20515843  24020709  31725861  31758541  31680301  9365866  31746298  31226934  31871521  31883869  12462821  31325240  31251168  31173747  31030526  9927239  30971318  27441047  31885671  31719213  31472732  31984495  12546048  31811818  31577042  31811817  16858230  31659876  31296051  "
     ]
    }
   ],
   "source": [
    "# données sur les citations de la meta analyse ou de l'article \n",
    "\n",
    "\n",
    "from Bio import Entrez ,Medline\n",
    "def ConPub():\n",
    "    Entrez.api_key = \"41843b992ded592334c39fe437c425e40608\"\n",
    "    Entrez.email = \"sacha.torres@univ_montp3.fr\"\n",
    "    Entrez.tool = \"Inca\"\n",
    "    print(\"connexion engaged captain picard !!!\")\n",
    "    print(\"\")\n",
    "    \n",
    "def clean_data(x):\n",
    "    chaine = str(x)\n",
    "    chaine = chaine.replace(\"['\",\" \")\n",
    "    chaine = chaine.replace(\"']\",\" \")\n",
    "    chaine = chaine.replace(\"'\",\" \")\n",
    "    return chaine    \n",
    "\n",
    "def PubStats(): # prendra une pmid en param\n",
    "    pmid = \"31564709\"\n",
    "    handle = Entrez.elink(db=\"pubmed\",id=pmid)\n",
    "    record = Entrez.read(handle)\n",
    "    return record\n",
    "\n",
    "def PubLink(): # prendra le resultat de PubStats en param\n",
    "    pmid = \"31564709\"\n",
    "    cpl = 0\n",
    "    record = PubStats()\n",
    "    for link in record[0][\"LinkSetDb\"]:\n",
    "        print(link[\"DbTo\"],link[\"LinkName\"],\" \",len(link[\"Link\"]))\n",
    "        cpl = cpl + 1\n",
    "    print(\"\") \n",
    "    print(\" nombre de lien pubmed possibles : \",len(link[\"LinkName\"]))\n",
    "    print(\" nombres de liens existant avec \",pmid,\" sont au total de : \",cpl)\n",
    "    print(\"\")\n",
    "ConPub()\n",
    "PubStats()\n",
    "PubLink()\n",
    "############################################\n",
    "# print(\"DB origine : \",record[0][\"DbFrom\"])\n",
    "# print(\" pmid de la publication : \",record[0][\"IdList\"])\n",
    "\n",
    "    \n",
    "############################################ \n",
    "\n",
    "# pubmed pubmed_pubmed   310            i=0\n",
    "# pubmed pubmed_pubmed_alsoviewed   6   i=1\n",
    "# pubmed pubmed_pubmed_citedin   1      i=2\n",
    "# pubmed pubmed_pubmed_combined   6     i=3\n",
    "# pubmed pubmed_pubmed_five   6         i=4\n",
    "# pubmed pubmed_pubmed_refs   61        i=5\n",
    "# pubmed pubmed_pubmed_reviews   169    i=6\n",
    "# pubmed pubmed_pubmed_reviews_five 6   i=7\n",
    "# il faut les avoir de lister les 26 dans l'ordre.\n",
    "# il manque pubmed_assembly , pubmed_bioproject , pubmed_biosystems , pubmed_biosample , pubmed_cancerchromosomes\n",
    "############################################\n",
    "i = 0\n",
    "for i in range(5):\n",
    "    print(\"pubmed_pubmed :  \",end=\"\")\n",
    "    print(record[0][\"LinkSetDb\"][0][\"Link\"][i])\n",
    "    print(\"pubmed_pubmed_alsoviewed :  \",end=\"\")\n",
    "    print(record[0][\"LinkSetDb\"][1][\"Link\"][i])# on accede au type de lien par le deuxieme indice\n",
    "print(\"\")\n",
    "\n",
    "# pour afficher les pmid selon le type de lien \n",
    "ids = record[0][\"LinkSetDb\"][0][\"Link\"]\n",
    "for link in ids:\n",
    "    print(link[\"Id\"],\" \",end=\"\")\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
